{"version":3,"sources":["helpers.js","components/Storepicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","store","current","defaultValue","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","value","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","loadSamplefishes","samplefishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.5836d5f3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\",\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\",\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  goToStore = (event) => {\n    //1> stop form from submitting\n    event.preventDefault();\n    //2. get the text from that input\n    const store = this.myInput.current.defaultValue;\n    //3. Change the page to /store/whatever they enetered\n    this.props.history.push(`/store/${store}`);\n  };\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please enter a store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">of</span>\n          <span className=\"the\">the</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  );\n};\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value), // storing price in number\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    //refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"out of stock\">Sold Out</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n\n  handleChange = (event) => {\n    console.log(event.currentTarget.value);\n    //update fish\n    //1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyA4SV661zmnJSwpG701MWUCAqWcI_6Jj8k\",\n  authDomain: \"catch-of-the-day-raghav-c7696.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-raghav-c7696.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//Named Export\nexport { firebaseApp };\n\n//default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // console.log(store);\n\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport samplefishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  addFish = (fish) => {\n    const fishes = { ...this.state.fishes };\n\n    fishes[`fish${Date.now()}`] = fish;\n\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    //1. Take a copy of current state\n    const fishes = { ...this.state.fishes };\n    //2. update that state\n    fishes[key] = updatedFish;\n    //3. set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    //take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    //update the state\n    fishes[key] = null;\n    //update the state\n    this.setState({ fishes });\n  };\n\n  loadSamplefishes = () => {\n    this.setState({ fishes: samplefishes });\n  };\n\n  addToOrder = (key) => {\n    const order = { ...this.state.order };\n    order[key] = order[key] + 1 || 1;\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    //1. copy of state\n    const order = { ...this.state.order };\n    //2. remove fish item from order\n    delete order[key];\n    //3. use setState to update state\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"FRESH SEAFOOD MARKET\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => {\n              return (\n                <Fish\n                  key={key}\n                  index={key}\n                  details={this.state.fishes[key]}\n                  addToOrder={this.addToOrder}\n                ></Fish>\n              );\n            })}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSamplefishes={this.loadSamplefishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <p>NOT FOUND!!!</p>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./Storepicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport Router from \"./components/Router\";\nimport { render } from \"react-dom\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}